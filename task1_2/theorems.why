theory Task1_2
  use import int.Int

  predicate p (x: int) (y1: int) (y2: int) (y3: int) =
     (x >= (y1 * y1 * y1)) /\ 
      (y2 = ((y1 + 1) * (y1 + 1) * (y1 + 1))) /\
       (y3 = ((y1 + 1) * (y1 + 1) * (y1 + 1)) - (y1 * y1 * y1))
 
  goal start_section :
    forall x:int, y1:int, y2:int, y3:int.
      (x >= 0) -> (p x 0 1 1)

  goal section_halt:
    forall x:int, y1:int, y2:int, y3:int.
      (x >= 0) /\ (p x y1 y2 y3) /\ (y2 > x) -> 
       (((y1 * y1 * y1) <= x) /\ (x < ((y1 + 1) * (y1 + 1) * (y1 + 1))))

  goal section_section:
    forall x:int, y1:int, y2:int, y3:int.
      (x >= 0) /\ (p x y1 y2 y3) /\ (y2 <= x) ->
       (p x (y1 + 1) (y2 + y3 + 6 * y1 + 6) (y3 + 6 * y1 + 6))

end

